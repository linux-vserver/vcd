# Example vserver context configuration

# Context ID
VX_XID="123"

# Init style
# possible values: plain gentoo
VX_INIT="plain"

# Time to wait before killing an unstoppable vserver (default: 30s)
#VX_TIMEOUT_KILL="30"

# Shell to be executed by "vserver enter" (default: /bin/bash)
#VX_SHELL="/bin/bash"

# Resource limits
#   <res> is one of: RSS, NPROC, NOFILE, MEMLOCK, AS,
#                    NSOCK, OPENFD, ANON, SHMEM
#   <limit> = <min>,<soft>,<hard>
#VX_LIMIT=( "<res>=<limit>" "<res>=<limit>" ... )

# CPU limits
#   <key> is one of: FILL_RATE, INTERVAL, TOKENS,
#                    TOKENS_MIN, TOKENS_MAX, PRIO_BIAS
#   <value> must be an integer
#VX_SCHED=( "<key>=<value>" "<key>=<value>" ... )

# Context UTS settings
#   <key> is one of: CONTEXT, SYSNAME, NODENAME, RELEASE,
#                    VERSION, MACHINE, DOMAINNAME
#   <value> must be a string
#VX_UNAME=( "<key>=<value>" "<key>=<value>" ... )

# System capabilities
# possible values: CHOWN DAC_OVERRIDE DAC_READ_SEARCH FOWNER
#                  FSETID FS_MASK KILL SETGID SETUID SETPCAP
#                  LINUX_IMMUTABLE NET_BIND_SERVICE NET_BROADCAST
#                  NET_ADMIN NET_RAW IPC_LOCK IPC_OWNER
#                  SYS_MODULE SYS_RAWIO SYS_CHROOT SYS_PTRACE
#                  SYS_PACCT SYS_ADMIN SYS_BOOT SYS_NICE SYS_RESOURCE
#                  SYS_TIME SYS_TTY_CONFIG MKNOD LEASE AUDIT_WRITE
#                  AUDIT_CONTROL
#VX_BCAPS=( "[~]<flag>" "[~]<flag>" ... )

# Context capabilities
# possible values: SET_UTSNAME SET_RLIMIT RAW_ICMP SYSLOG
#                  SECURE_MOUNT SECURE_REMOUNT BINARY_MOUNT
#                  QUOTA_CTL
#VX_CCAPS=( "[~]<flag>" "[~]<flag>" ... )

# Context flags
# possible values: INFO_LOCK INFO_SCHED INFO_NPROC INFO_PRIVATE
#                  INFO_INIT INFO_HIDE INFO_ULIMIT INFO_NSPACE
#                  SCHED_HARD SCHED_PRIO SCHED_PAUSE
#                  VIRT_MEM VIRT_UPTIME VIRT_CPU VIRT_LOAD
#                  HIDE_MOUNT HIDE_NETIF
#                  STATE_SETUP STATE_INIT SC_HELPER
#                  REBOOT_KILL PERSISTANT FORK_RSS PROLIFIC
#                  IGNEG_NICE ONE_TIME INIT_SET
#VX_FLAGS=( "[~]<flag>" "[~]<flag>" ... )
